

type data = u32;
type data2 = u32[4];

export fn test() -> reg data {
    reg data x;
    x = 1;
    return x;
}

namespace A {
    type x = u32;

    fn s() -> {
        reg x test;
        test += 1;
    }
}

fn test2(reg A::x v, reg data2 y) -> reg A::x {
    reg A::x v2;
    v2 = v;
    v2+=1;
    y[0] = 1;
    return v2;
}

namespace B {
    type x = u8;
}

fn test_cast() {
    reg A::x v;
    v=1;

    reg B::x[4] v2;
    v2[`data 0] = v;
}